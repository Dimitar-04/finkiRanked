[
  {
    "title": "a-phone-code",
    "description": "Your task is to calculate the length of the longest common starting sequence (prefix) among a list of phone numbers, which represents the city's phone code.",
    "examples": [
      {
        "input": "3\n007\n00123\n00124",
        "output": "2"
      },
      {
        "input": "4\n12345\n123\n123987\n123456",
        "output": "3"
      }
    ],
    "difficulty": "Easy"
  },
  {
    "title": "acronyms",
    "description": "Develop a function that takes a sentence and converts it into its acronym by taking the first letter of each word.",
    "examples": [
      {
        "input": "Programming Challenges is really cool",
        "output": "PCIRC"
      },
      {
        "input": "Portable Network Graphics",
        "output": "PNG"
      }
    ],
    "difficulty": "Easy"
  },
  {
    "title": "caesar-cipher",
    "description": "Implement a function that encrypts a message using the Caesar cipher technique, which involves shifting each letter of the alphabet by a specified number of places.",
    "examples": [
      {
        "input": "'ANTHONY', -3",
        "output": "XKQELKV"
      },
      {
        "input": "'JULIUS CAESAR', 3",
        "output": "MXOLXV FDHVDU"
      }
    ],
    "difficulty": "Easy"
  },
  {
    "title": "cakes-swerc-2020-2021",
    "description": "You need to determine the maximum number of cakes you can bake given a list of required ingredients per cake and the quantities of those ingredients you currently possess.",
    "examples": [
      {
        "input": "3\n100 500\n2 5\n70 1000",
        "output": "2"
      },
      {
        "input": "3\n100 50\n2 5\n70 1000",
        "output": "0"
      }
    ],
    "difficulty": "Easy"
  },
  {
    "title": "camel-case",
    "description": "Construct a function that converts a standard string into camelCase format, where all words except the first begin with a capital letter and are joined without spaces.",
    "examples": [
      {
        "input": "hello world",
        "output": "helloWorld"
      },
      {
        "input": "first name",
        "output": "firstName"
      }
    ],
    "difficulty": "Easy"
  },
  {
    "title": "consecutive-numbers",
    "description": "Design a function that identifies and returns all sequences of consecutive integers within a given list of numbers. The required length for a sequence to be considered 'consecutive' is given as the first input.",
    "examples": [
      {
        "input": "2\n5 ; 1 ; 2 ; 3 ; 8 ; -5 ; -4 ; 7",
        "output": "1 ; 2\n2 ; 3\n-5 ; -4"
      },
      {
        "input": "3\n5 ; 1 ; 2 ; 3 ; 8 ; -5 ; -4 ; 7",
        "output": "1 ; 2 ; 3"
      }
    ],
    "difficulty": "Easy"
  },
  {
    "title": "convert-number-from-base-to-another",
    "description": "Create a function capable of converting a given natural number from its initial base to a target base. The function should handle bases from 2 to 36, using digits 0-9 and then capital letters A-Z.",
    "examples": [
      {
        "input": "15\n10\n16",
        "output": "F"
      },
      {
        "input": "100000000\n2\n16",
        "output": "100"
      }
    ],
    "difficulty": "Medium"
  },
  {
    "title": "fibonacci",
    "description": "Your goal is to build a function that generates an array containing a specified quantity of Fibonacci numbers. The Fibonacci sequence starts with 0 and 1, and each subsequent number is the sum of the two preceding ones.",
    "examples": [
      {
        "input": "8",
        "output": "[0, 1, 1, 2, 3, 5, 8, 13]"
      },
      {
        "input": "14",
        "output": "[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233]"
      }
    ],
    "difficulty": "Easy"
  },
  {
    "title": "find-closest-number",
    "description": "Given a list of integers and a separate target integer, your function must find and return the integer from the list that is numerically closest to the target.",
    "examples": [
      {
        "input": "given_number: 3\narray: [1, 2, 3, 4, 5, 6]",
        "output": "3"
      },
      {
        "input": "given_number: 0\narray: [7, -10, 13, 8, 4, -7, -12, -3, 3, -9, 6, -1, -6, 7]",
        "output": "-1"
      }
    ],
    "difficulty": "Easy"
  },
  {
    "title": "find-outlier-number",
    "description": "You're provided an array of integers that is composed almost entirely of either odd or even numbers, with the exception of one unique number. Your task is to write a function that identifies and returns this single outlier.",
    "examples": [
      {
        "input": "[2, 4, 0, 100, 4, 11, 2602, 36]",
        "output": "11"
      },
      {
        "input": "[160, 3, 1719, 19, 11, 13, -21]",
        "output": "160"
      }
    ],
    "difficulty": "Easy"
  },
  {
    "title": "first-non-repeating-character",
    "description": "Write a function to find the first character in a string that does not appear again in that string. If every character is repeated, the function should return an empty string.",
    "examples": [
      {
        "input": "'stress'",
        "output": "'t'"
      },
      {
        "input": "'aabbcc'",
        "output": "''"
      }
    ],
    "difficulty": "Easy"
  }
]
